version: "3"

services:
  proxy:
    image: traefik:1.7.15
    restart: "unless-stopped"
    # command: --docker --logLevel=DEBUG
    stdin_open: true
    tty: true
    ports:
      - "80:80"
    #  - "8080:8080"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./logs:/var/log/traefik
      - ./traefik.toml:/etc/traefik/traefik.toml
      # - ./rules.toml:/toml/rules.toml
      - ${PWD}/certs:/etc/traefik/certs
      # environment:
        # DO_AUTH_TOKEN: SOME_TOKEN
    labels:
      # Display this service on Traefik dashboard
      - "traefik.enable=true"

      # Network name used by backed
      - "traefik.docker.network=web"

      # Name of backed
      - "traefik.backend=traefik"

      # Put in here your domain
      - "traefik.frontend.rule=Host:www.monitor.local"

      # Traefik default port 
      - "traefik.port=8080"

      # Enable https        
      # - "traefik.frontend.entryPoints=https"

      # Traefik Authentication
      # User: admin / Password: admin
      #
      # You can generate this with: htpasswd -n -B My_User
      # Tip: Escape all "$" characters putting another "$" before it
      - "traefik.frontend.auth.basic=admin:$$2y$$05$$6FoqybHOsvxpVQa6S/zs8.lF4mqdnWhesUhPWF3eGhRANhIvkm5WC"
    networks:
      - web
      - internal

  whoami:
    image: emilevauge/whoami
    expose:
      - "8000"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      
      # Port: 443 to 80
      #- "traefik.app.frontend.rule=Host:www.whoami.local"
      #- "traefik.app.backend=whoami"
      #- "traefik.port=80"
      #- "traefik.frontend.entryPoints=https"
      
      # Port: 80 to 80
      - "traefik.app.frontend.rule=Host:www.whoami.local"
      - "traefik.app.backend=whoami"
      - "traefik.port=80"
      - "traefik.frontend.entryPoints=http"
      
      # Some tips for circuit breaker, middlewares and stuff. Enable as you want :)
      #- "traefik.http.middlewares.latency-check.circuitbreaker.expression=LatencyAtQuantileMS(50.0) > 5000"
      #- "traefik.backend.circuitbreaker.expression=ResponseCodeRatio(500, 600, 0, 600) > 0.1"
      #- "traefik.backend.circuitbreaker.expression=NetworkErrorRatio() > 0.1"
      #- "traefik.http.middlewares.limit.buffering.maxRequestBodyBytes=2097152"
      #- "traefik.http.middlewares.limit.buffering.retryExpression=IsNetworkError() && Attempts() < 4"
      #- "traefik.http.middlewares.test-compress.compress=true"
      #- "traefik.http.middlewares.test-ratelimit.ratelimit.average=100"
      #- "traefik.http.middlewares.test-ratelimit.ratelimit.burst=50"
      #- "traefik.http.middlewares.test-ratelimit.ratelimit.sourcecriterion.ipstrategy.excludedips=127.0.0.1/32"
      # - "traefik.http.middlewares.test-redirectscheme.redirectscheme.permanent=https"
      # - "traefik.http.middlewares.test-redirectscheme.redirectscheme.scheme=https"
      # - "traefik.http.middlewares.limit.buffering.maxResponseBodyBytes=2097152"
      # - "traefik.weight=1"

    networks:
      - internal

networks:
  web:
    external: true
  internal:
    external: true
